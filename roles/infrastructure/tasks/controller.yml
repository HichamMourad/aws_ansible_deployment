---
- name: Check if the controller VMs are already provisioned
  amazon.aws.ec2_instance_info:
    filters:
      "tag:purpose": ansible-automation-platform
      "tag:environment": aap
      "tag:deployment": "aap-infrastructure-{{ deployment_id }}"
      "tag:app": controller
      "instance-state-name":
        - pending
        - running
        - shutting-down
        - stopping
        - stopped
    region: "{{ infrastructure_aws_region }}"
  register: infrastructure_existing_vm
  tags:
    - controller

- name: Output number of existing VMs
  ansible.builtin.debug:
    var: infrastructure_existing_vm

- name: Output number of existing VMs
  ansible.builtin.debug:
    msg: "Number of existing Controller VMs: {{ infrastructure_existing_vm.instances | length }}"
  when: 
    - infrastructure_existing_vm.instances is defined
  tags:
    - controller

- name: Set number of Controller VMs to create
  ansible.builtin.set_fact:
    infrastructure_controller_vms_to_create: "{{ infrastructure_controller_instances - (infrastructure_existing_vm.instances | default([]) | length) }}"
  tags:
    - controller

- name: Output number of VMs to create
  ansible.builtin.debug:
    msg: "Creating Controller VMs: {{ infrastructure_controller_vms_to_create }}"
  tags:
    - controller

- name: Create VMs
  when: infrastructure_controller_vms_to_create | int > 0
  block:
    - name: Include create vm task
      ansible.builtin.include_tasks: vm.yml
      loop: "{{ query('sequence', 'start=1 end=' + (infrastructure_controller_vms_to_create | string)) }}"
      vars:
        instance_type: "{{ infrastructure_controller_shape }}"
        ami: "{{ infrastructure_controller_ami }}"
        vm_name_prefix: controller-
        host_groups:
          - aap
          - controller
        app_tag: controller
      tags:
        - controller
  rescue:
    - name: Create VM error
      ansible.builtin.debug:
        msg: 'No VMs to create'
