---
- name: Check if the eda VMs are already provisioned
  amazon.aws.ec2_instance_info:
    filters:
      "tag:purpose": ansible-automation-platform
      "tag:environment": aap
      "tag:deployment": "aap-infrastructure-{{ deployment_id }}"
      "tag:app": eda
      "instance-state-name":
        - pending
        - running
        - shutting-down
        - stopping
        - stopped
    region: "{{ infrastructure_region }}"
  register: infrastructure_existing_vm
  tags:
    - eda

- name: Output number of existing VMs
  ansible.builtin.debug:
    msg: "Number of existing eda VMs: {{ infrastructure_existing_vm.instances | length }}"
  when: 
    - infrastructure_existing_vm.instances is defined
  tags:
    - eda

- name: Ensure existing VMs are running
  amazon.aws.ec2_instance:
    state: started
    instance_ids: "{{ infrastructure_existing_vm.instances | map(attribute='instance_id') | list }}"
    region: "{{ infrastructure_region }}"
  when: infrastructure_existing_vm.instances | length > 0
  tags:
    - eda

- name: Add hosts to group
  when: infrastructure_existing_vm.instances | length > 0
  ansible.builtin.add_host:
    groups:
      - aap
      - eda
    name: "{{ item.public_ip_address }}"
  loop: "{{ infrastructure_existing_vm.instances }}"
  tags:
    - eda

- name: Set number of eda VMs to create
  ansible.builtin.set_fact:
    infrastructure_eda_vms_to_create: "{{ infrastructure_eda_instances - (infrastructure_existing_vm.instances | default([]) | length) }}"
  tags:
    - eda

- name: Output number of VMs to create
  ansible.builtin.debug:
    msg: "Creating eda VMs: {{ infrastructure_eda_vms_to_create }}"
  tags:
    - eda

- name: Create VMs
  when: infrastructure_eda_vms_to_create | int > 0
  ignore_errors: true
  block:
    - name: Include create vm task
      ansible.builtin.include_tasks: vm.yml
      loop: "{{ query('sequence', 'start=1 end=' + (infrastructure_eda_vms_to_create | string)) }}"
      vars:
        instance_type: "{{ infrastructure_eda_shape }}"
        ami: "{{ infrastructure_eda_ami }}"
        vm_name_prefix: eda-
        host_groups:
          - aap
          - eda
        app_tag: eda
        subnet: "{{ infrastructure_subnet_ids[2] }}"
      tags:
        - eda
